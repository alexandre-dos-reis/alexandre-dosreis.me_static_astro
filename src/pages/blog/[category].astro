---
import Link from "src/components/Link.astro";
import BaseLayout from "src/layouts/BaseLayout.astro";
import { getCategories, sortCategoriesAlphabetically, sortMdByDate, unslugify } from "src/utils/functions";
import type { Article } from "src/utils/types";

export async function getStaticPaths() {
  const articlesOnline = sortMdByDate(
    (await Astro.glob<Article>(`/src/pages/blog/**/*.mdx`)).filter(
      (a) => !a.frontmatter.draft
    )
  );

  return getCategories(articlesOnline, "/blog").map((c) => ({
    params: { category: c.slug },
  }));
}

const { category } = Astro.params;

const articlesByCategory = sortMdByDate(
  (await Astro.glob<Article>(`/src/pages/blog/**/*.mdx`)).filter(
    (a) => !a.frontmatter.draft
  )
).filter((a) => a.url?.startsWith(Astro.url.pathname));

const length = articlesByCategory.length;

const unsluggedCat = unslugify(category as string);

let pathname = Astro.url.pathname
pathname = pathname.endsWith("/") ? pathname.slice(0, pathname.length - 1) : pathname

const categories = sortCategoriesAlphabetically(getCategories(
  sortMdByDate(
    (await Astro.glob<Article>(`/src/pages/blog/**/*.mdx`)).filter(
      (a) => !a.frontmatter.draft
    )
  ),
  pathname.replace(category as string, "")
));
---

<BaseLayout title={unsluggedCat}>
  <section>
    <h2>Cat√©gories üè∑Ô∏è #Ô∏è‚É£</h2>
    <ul class="list-none flex flex-wrap">
      <li class="bg-gray-300 py-[2px] px-2 m-1 rounded-lg">
        <Link class="text-gray-800 text-sm" href="/blog">
          Toutes les cat√©gories
        </Link>
      </li>
      {
        categories.map((c) => (
          <li class="bg-gray-300 py-[2px] px-2 m-1 rounded-lg">
            <Link class="text-gray-800 text-sm" href={c.href}>
              {c.name}
            </Link>
          </li>
        ))
      }
    </ul>
  </section>
  <section>
    <h2>
      {length} publication{length !== 1 ? "s" : ""} üìÉ pour la cat√©gorie <i
        >{unsluggedCat}</i
      >
    </h2>
    <ul class="list-none">
      {
        articlesByCategory.map((a) => (
          <li class="flex gap-x-10">
            <time class="text-gray-500 whitespace-nowrap">
              {a.frontmatter.date}
            </time>
            <Link href={a.url}>{a.frontmatter.title}</Link>
          </li>
        ))
      }
    </ul>
  </section>
</BaseLayout>
